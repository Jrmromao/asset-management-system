// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  name           String
  role           String
  organizationId Int
  organization   Organization  @relation(fields: [organizationId], references: [id])
  assets         Asset[]
  toolLicenses   ToolLicense[]
  auditLogs      AuditLog[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Organization {
  id        Int        @id @default(autoincrement())
  name      String
  users     User[]
  auditLogs AuditLog[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Asset {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  price        Float
  categoryId   Int
  userId       Int
  transactions Transaction[]
  category     Category      @relation(fields: [categoryId], references: [id])
  user         User          @relation(fields: [userId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  assets    Asset[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id        Int      @id @default(autoincrement())
  type      String
  amount    Float
  assetId   Int
  asset     Asset    @relation(fields: [assetId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ToolLicense {
  id             Int      @id @default(autoincrement())
  name           String
  key            String
  issuedDate     DateTime
  expirationDate DateTime
  userId         Int?
  user           User?    @relation(fields: [userId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model AuditLog {
  id             Int          @id @default(autoincrement())
  action         String
  entity         String
  entityId       Int?
  userId         Int
  user           User         @relation(fields: [userId], references: [id])
  organizationId Int
  organization   Organization @relation(fields: [organizationId], references: [id])
  details        String?
  createdAt      DateTime     @default(now())
}

model Sample {
  id        Int      @id @default(autoincrement())
  action    String
  createdAt DateTime @default(now())
}
